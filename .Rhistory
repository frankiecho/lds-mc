#if (variable == 'η') p <- p + scale_x_continuous(trans=scales::pseudo_log_trans(base = 10))
if (hide_y) p <- p + theme(axis.title.y = element_blank(), axis.ticks.y = element_blank(), axis.text.y = element_blank())
if (variable=='η') p <- p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
return(p)
}
plt <- fcn_generate_mc_lineplots('ρ', hide_y = F) + fcn_generate_mc_lineplots('σ') +fcn_generate_mc_lineplots('η', 'π') +fcn_generate_mc_lineplots('yy', 'υ') +fcn_generate_mc_lineplots('budget', 'B') + fcn_generate_mc_lineplots('N') + fcn_generate_mc_lineplots('β') +
plot_layout(nrow = 1)
ggsave('plots/mc_sim_plot_ev.png', plt, scale = 2, width = 2000, height = 1000, units = 'px')
plt <- fcn_generate_mc_lineplots('ρ', hide_y = F) + fcn_generate_mc_lineplots('σ') +fcn_generate_mc_lineplots('η', 'π') +fcn_generate_mc_lineplots('yy', 'υ') +fcn_generate_mc_lineplots('budget', 'B') + fcn_generate_mc_lineplots('N') + fcn_generate_mc_lineplots('β') + plot_layout(guides = 'collect')
plot_layout(nrow = 1)
plt <- fcn_generate_mc_lineplots('ρ', hide_y = F) + fcn_generate_mc_lineplots('σ') +fcn_generate_mc_lineplots('η', 'π') +fcn_generate_mc_lineplots('yy', 'υ') +fcn_generate_mc_lineplots('budget', 'B') + fcn_generate_mc_lineplots('N') + fcn_generate_mc_lineplots('β') +
plot_layout(nrow = 1, guides = 'collect')
ggsave('plots/mc_sim_plot_ev.png', plt, scale = 2, width = 2000, height = 1000, units = 'px')
fcn_generate_mc_lineplots <- function(variable, axis_title = NULL, hide_y = TRUE) {
selected_runs <- param_table %>%
filter(run == 1 | !!as.symbol(variable) != param_table[1,variable][[1]])
if (is.null(axis_title)) axis_title <- variable
p <- ce_df_comb %>%
mutate(name = factor(c('mstd_ev', 'cvar_ev'), c('M-SD', 'M-CVaR'))) %>%
filter(run %in% selected_runs$run) %>%
mutate(sig_diff = ifelse(lb > 0, 'cvar', ifelse(ub < 0, 'mstd', 'tie'))) %>%
mutate(sig_diff = factor(sig_diff, levels = c('tie', 'cvar', 'mstd'))) %>%
ggplot(aes(x = as.factor(!!as.symbol(variable)), color = name)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = lb, ymax = ub), width = 0, linewidth = 0.5, position = position_dodge(width=.5)) +
geom_point(aes(y = median), position = position_dodge(width=.5)) +
scale_y_continuous("CE change from EV", labels = scales::percent) +
scale_color_discrete() +
#scale_color_manual(values = c('#333333',"#0072B5FF",'#BC3C29FF')) +
facet_wrap(vars(alpha), strip.position="top", ncol = 1, labeller = labeller(alpha = alpha_lab)) +
theme_bw() +
labs(x = axis_title) +
theme(panel.grid = element_blank())
#if (variable == 'η') p <- p + scale_x_continuous(trans=scales::pseudo_log_trans(base = 10))
if (hide_y) p <- p + theme(axis.title.y = element_blank(), axis.ticks.y = element_blank(), axis.text.y = element_blank())
if (variable=='η') p <- p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
return(p)
}
plt <- fcn_generate_mc_lineplots('ρ', hide_y = F) + fcn_generate_mc_lineplots('σ') +fcn_generate_mc_lineplots('η', 'π') +fcn_generate_mc_lineplots('yy', 'υ') +fcn_generate_mc_lineplots('budget', 'B') + fcn_generate_mc_lineplots('N') + fcn_generate_mc_lineplots('β') +
plot_layout(nrow = 1, guides = 'collect')
ggsave('plots/mc_sim_plot_ev.png', plt, scale = 2, width = 2000, height = 1000, units = 'px')
fcn_generate_mc_lineplots <- function(variable, axis_title = NULL, hide_y = TRUE) {
selected_runs <- param_table %>%
filter(run == 1 | !!as.symbol(variable) != param_table[1,variable][[1]])
if (is.null(axis_title)) axis_title <- variable
p <- ce_df_comb %>%
mutate(name = factor(name, c('mstd_ev', 'cvar_ev'), c('M-SD', 'M-CVaR'))) %>%
filter(run %in% selected_runs$run) %>%
mutate(sig_diff = ifelse(lb > 0, 'cvar', ifelse(ub < 0, 'mstd', 'tie'))) %>%
mutate(sig_diff = factor(sig_diff, levels = c('tie', 'cvar', 'mstd'))) %>%
ggplot(aes(x = as.factor(!!as.symbol(variable)), color = name)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = lb, ymax = ub), width = 0, linewidth = 0.5, position = position_dodge(width=.5)) +
geom_point(aes(y = median), position = position_dodge(width=.5)) +
scale_y_continuous("CE change from EV", labels = scales::percent) +
scale_color_discrete() +
#scale_color_manual(values = c('#333333',"#0072B5FF",'#BC3C29FF')) +
facet_wrap(vars(alpha), strip.position="top", ncol = 1, labeller = labeller(alpha = alpha_lab)) +
theme_bw() +
labs(x = axis_title) +
theme(panel.grid = element_blank())
#if (variable == 'η') p <- p + scale_x_continuous(trans=scales::pseudo_log_trans(base = 10))
if (hide_y) p <- p + theme(axis.title.y = element_blank(), axis.ticks.y = element_blank(), axis.text.y = element_blank())
if (variable=='η') p <- p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
return(p)
}
plt <- fcn_generate_mc_lineplots('ρ', hide_y = F) + fcn_generate_mc_lineplots('σ') +fcn_generate_mc_lineplots('η', 'π') +fcn_generate_mc_lineplots('yy', 'υ') +fcn_generate_mc_lineplots('budget', 'B') + fcn_generate_mc_lineplots('N') + fcn_generate_mc_lineplots('β') +
plot_layout(nrow = 1, guides = 'collect')
ggsave('plots/mc_sim_plot_ev.png', plt, scale = 2, width = 2000, height = 1000, units = 'px')
fcn_generate_mc_lineplots <- function(variable, axis_title = NULL, hide_y = TRUE) {
selected_runs <- param_table %>%
filter(run == 1 | !!as.symbol(variable) != param_table[1,variable][[1]])
if (is.null(axis_title)) axis_title <- variable
p <- ce_df_comb %>%
mutate(name = factor(name, c('mstd_ev', 'cvar_ev'), c('M-SD', 'M-CVaR'))) %>%
filter(run %in% selected_runs$run) %>%
mutate(sig_diff = ifelse(lb > 0, 'cvar', ifelse(ub < 0, 'mstd', 'tie'))) %>%
mutate(sig_diff = factor(sig_diff, levels = c('tie', 'cvar', 'mstd'))) %>%
ggplot(aes(x = as.factor(!!as.symbol(variable)), color = name)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = lb, ymax = ub), width = 0, linewidth = 0.5, position = position_dodge(width=.5)) +
geom_point(aes(y = median), position = position_dodge(width=.5)) +
scale_y_continuous("CE change from EV", labels = scales::percent) +
scale_color_discrete('') +
#scale_color_manual(values = c('#333333',"#0072B5FF",'#BC3C29FF')) +
facet_wrap(vars(alpha), strip.position="top", ncol = 1, labeller = labeller(alpha = alpha_lab)) +
theme_bw() +
labs(x = axis_title) +
theme(panel.grid = element_blank())
#if (variable == 'η') p <- p + scale_x_continuous(trans=scales::pseudo_log_trans(base = 10))
if (hide_y) p <- p + theme(axis.title.y = element_blank(), axis.ticks.y = element_blank(), axis.text.y = element_blank())
if (variable=='η') p <- p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
return(p)
}
plt <- fcn_generate_mc_lineplots('ρ', hide_y = F) + fcn_generate_mc_lineplots('σ') +fcn_generate_mc_lineplots('η', 'π') +fcn_generate_mc_lineplots('yy', 'υ') +fcn_generate_mc_lineplots('budget', 'B') + fcn_generate_mc_lineplots('N') + fcn_generate_mc_lineplots('β') +
plot_layout(nrow = 1, guides = 'collect')
ggsave('plots/mc_sim_plot_ev.png', plt, scale = 2, width = 2000, height = 1000, units = 'px')
library(tidyverse)
library(patchwork)
nsims = 60
options(scipen = 999)
param_table <- read_csv("output/param_df.csv") %>%
mutate(η = as.character(η))
param_table <- param_table[1:(nrow(param_table)),] %>%
mutate(N = ifelse(dims=='(10, 10)', 100, ifelse(dims=='(30, 30)', 900, 400)))
param_table$run <- 1:nrow(param_table)
runs = 1:nrow(param_table)
alpha_vec <- c(0, 15, 30)
alpha_lab <- c(`0` = 'θ=0', `15` = 'θ=15', `30` = 'θ=30')
ce_df <- lapply(runs, \(i) read_csv(paste0("output/ce_df_param_search_", i, "_", nsims, ".csv"), show_col_types = F)) %>%
lapply(\(x) filter(x, alpha %in% alpha_vec)) %>%
lapply(\(x) dplyr::select(x, 'cvar_ev', 'mstd_ev', 'var', 'alpha')) %>%
lapply(\(x) pivot_longer(x, cols = c(cvar_ev, mstd_ev))) %>%
lapply(\(x) pivot_wider(x, names_from = 'var', values_from = 'value'))
names(ce_df) <- runs
ce_df_comb <- ce_df %>%
bind_rows(.id = 'run') %>%
mutate(run = as.integer(run)) %>%
left_join(param_table, by = 'run') %>%
mutate(N = ifelse(dims=='(10, 10)', '100', ifelse(dims=='(30, 30)', '900', '400')))
fcn_generate_mc_lineplots <- function(variable, axis_title = NULL, hide_y = TRUE) {
selected_runs <- param_table %>%
filter(run == 1 | !!as.symbol(variable) != param_table[1,variable][[1]])
if (is.null(axis_title)) axis_title <- variable
p <- ce_df_comb %>%
mutate(name = factor(name, c('mstd_ev', 'cvar_ev'), c('M-SD', 'M-CVaR'))) %>%
filter(run %in% selected_runs$run) %>%
mutate(sig_diff = ifelse(lb > 0, 'cvar', ifelse(ub < 0, 'mstd', 'tie'))) %>%
mutate(sig_diff = factor(sig_diff, levels = c('tie', 'cvar', 'mstd'))) %>%
ggplot(aes(x = as.factor(!!as.symbol(variable)), color = name)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = lb, ymax = ub), width = 0, linewidth = 0.5, position = position_dodge(width=.5)) +
geom_point(aes(y = median), position = position_dodge(width=.5)) +
scale_y_continuous("CE change from EV", labels = scales::percent) +
scale_color_discrete('') +
#scale_color_manual(values = c('#333333',"#0072B5FF",'#BC3C29FF')) +
facet_wrap(vars(alpha), strip.position="top", ncol = 1, labeller = labeller(alpha = alpha_lab)) +
theme_bw() +
labs(x = axis_title) +
theme(panel.grid = element_blank())
#if (variable == 'η') p <- p + scale_x_continuous(trans=scales::pseudo_log_trans(base = 10))
if (hide_y) p <- p + theme(axis.title.y = element_blank(), axis.ticks.y = element_blank(), axis.text.y = element_blank())
if (variable=='η') p <- p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
return(p)
}
plt <- fcn_generate_mc_lineplots('ρ', hide_y = F) + fcn_generate_mc_lineplots('σ') +fcn_generate_mc_lineplots('η', 'π') +fcn_generate_mc_lineplots('yy', 'υ') +fcn_generate_mc_lineplots('budget', 'B') + fcn_generate_mc_lineplots('N') + fcn_generate_mc_lineplots('β') +
plot_layout(nrow = 1, guides = 'collect')
ggsave('plots/mc_sim_plot_ev.png', plt, scale = 2, width = 2000, height = 1000, units = 'px')
library(tidyverse)
library(patchwork)
nsims = 60
options(scipen = 999)
param_table <- read_csv(sprintf("output/param_df_%s.csv", nsims)) %>%
mutate(η = as.character(η))
param_table <- param_table[1:(nrow(param_table)),] %>%
mutate(N = ifelse(dims=='(10, 10)', 100, ifelse(dims=='(30, 30)', 900, 400)))
param_table$run <- 1:nrow(param_table)
runs = 1:nrow(param_table)
alpha_vec <- c(0, 15, 30)
alpha_lab <- c(`0` = 'θ=0', `15` = 'θ=15', `30` = 'θ=30')
ce_df <- lapply(runs, \(i) read_csv(paste0("output/ce_df_param_search_", i, "_", nsims, ".csv"), show_col_types = F)) %>%
lapply(\(x) filter(x, alpha %in% alpha_vec)) %>%
lapply(\(x) dplyr::select(x, 'cvar_ev', 'mstd_ev', 'var', 'alpha')) %>%
lapply(\(x) pivot_longer(x, cols = c(cvar_ev, mstd_ev))) %>%
lapply(\(x) pivot_wider(x, names_from = 'var', values_from = 'value'))
names(ce_df) <- runs
ce_df_comb <- ce_df %>%
bind_rows(.id = 'run') %>%
mutate(run = as.integer(run)) %>%
left_join(param_table, by = 'run') %>%
mutate(N = ifelse(dims=='(10, 10)', '100', ifelse(dims=='(30, 30)', '900', '400')))
fcn_generate_mc_lineplots <- function(variable, axis_title = NULL, hide_y = TRUE) {
selected_runs <- param_table %>%
filter(run == 1 | !!as.symbol(variable) != param_table[1,variable][[1]])
if (is.null(axis_title)) axis_title <- variable
p <- ce_df_comb %>%
mutate(name = factor(name, c('mstd_ev', 'cvar_ev'), c('M-SD', 'M-CVaR'))) %>%
filter(run %in% selected_runs$run) %>%
mutate(sig_diff = ifelse(lb > 0, 'cvar', ifelse(ub < 0, 'mstd', 'tie'))) %>%
mutate(sig_diff = factor(sig_diff, levels = c('tie', 'cvar', 'mstd'))) %>%
ggplot(aes(x = as.factor(!!as.symbol(variable)), color = name)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = lb, ymax = ub), width = 0, linewidth = 0.5, position = position_dodge(width=.5)) +
geom_point(aes(y = median), position = position_dodge(width=.5)) +
scale_y_continuous("CE change from EV", labels = scales::percent) +
scale_color_discrete('') +
#scale_color_manual(values = c('#333333',"#0072B5FF",'#BC3C29FF')) +
facet_wrap(vars(alpha), strip.position="top", ncol = 1, labeller = labeller(alpha = alpha_lab)) +
theme_bw() +
labs(x = axis_title) +
theme(panel.grid = element_blank())
#if (variable == 'η') p <- p + scale_x_continuous(trans=scales::pseudo_log_trans(base = 10))
if (hide_y) p <- p + theme(axis.title.y = element_blank(), axis.ticks.y = element_blank(), axis.text.y = element_blank())
if (variable=='η') p <- p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
return(p)
}
plt <- fcn_generate_mc_lineplots('ρ', hide_y = F) + fcn_generate_mc_lineplots('σ') +fcn_generate_mc_lineplots('η', 'π') +fcn_generate_mc_lineplots('yy', 'υ') +fcn_generate_mc_lineplots('budget', 'B') + fcn_generate_mc_lineplots('N') + fcn_generate_mc_lineplots('β') +
plot_layout(nrow = 1, guides = 'collect')
ggsave('plots/mc_sim_plot_ev.png', plt, scale = 2, width = 2000, height = 1000, units = 'px')
library(tidyverse)
library(patchwork)
nsims = 60
options(scipen = 999)
param_table <- read_csv(sprintf("output/param_df_%s.csv", nsims)) %>%
mutate(η = as.character(η))
param_table <- param_table[1:(nrow(param_table)),] %>%
mutate(N = ifelse(dims=='(10, 10)', 100, ifelse(dims=='(30, 30)', 900, 400)))
param_table$run <- 1:nrow(param_table)
runs = 1:nrow(param_table)
alpha_vec <- c(0, 15, 30)
alpha_lab <- c(`0` = 'θ=0', `15` = 'θ=15', `30` = 'θ=30')
ce_df <- lapply(runs, \(i) read_csv(paste0("output/ce_df_param_search_", i, "_", nsims, ".csv"), show_col_types = F)) %>%
lapply(\(x) filter(x, alpha %in% alpha_vec)) %>%
lapply(\(x) dplyr::select(x, 'cvar_ev', 'mstd_ev', 'var', 'alpha')) %>%
lapply(\(x) pivot_longer(x, cols = c(cvar_ev, mstd_ev))) %>%
lapply(\(x) pivot_wider(x, names_from = 'var', values_from = 'value'))
names(ce_df) <- runs
ce_df_comb <- ce_df %>%
bind_rows(.id = 'run') %>%
mutate(run = as.integer(run)) %>%
left_join(param_table, by = 'run') %>%
mutate(N = ifelse(dims=='(10, 10)', '100', ifelse(dims=='(30, 30)', '900', '400')))
fcn_generate_mc_lineplots <- function(variable, axis_title = NULL, hide_y = TRUE) {
selected_runs <- param_table %>%
filter(run == 1 | !!as.symbol(variable) != param_table[1,variable][[1]])
if (is.null(axis_title)) axis_title <- variable
p <- ce_df_comb %>%
mutate(name = factor(name, c('mstd_ev', 'cvar_ev'), c('M-SD', 'M-CVaR'))) %>%
filter(run %in% selected_runs$run) %>%
mutate(sig_diff = ifelse(lb > 0, 'cvar', ifelse(ub < 0, 'mstd', 'tie'))) %>%
mutate(sig_diff = factor(sig_diff, levels = c('tie', 'cvar', 'mstd'))) %>%
ggplot(aes(x = as.factor(!!as.symbol(variable)), color = name)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = lb, ymax = ub), width = 0, linewidth = 0.5, position = position_dodge(width=.5)) +
geom_point(aes(y = median), position = position_dodge(width=.5)) +
scale_y_continuous("CE change from EV", labels = scales::percent) +
scale_color_discrete('') +
#scale_color_manual(values = c('#333333',"#0072B5FF",'#BC3C29FF')) +
facet_wrap(vars(alpha), strip.position="top", ncol = 1, labeller = labeller(alpha = alpha_lab)) +
theme_bw() +
labs(x = axis_title) +
theme(panel.grid = element_blank())
#if (variable == 'η') p <- p + scale_x_continuous(trans=scales::pseudo_log_trans(base = 10))
if (hide_y) p <- p + theme(axis.title.y = element_blank(), axis.ticks.y = element_blank(), axis.text.y = element_blank())
if (variable=='η') p <- p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
return(p)
}
plt <- fcn_generate_mc_lineplots('ρ', hide_y = F) + fcn_generate_mc_lineplots('σ') +fcn_generate_mc_lineplots('η', 'π') +fcn_generate_mc_lineplots('yy', 'υ') +fcn_generate_mc_lineplots('budget', 'B') + fcn_generate_mc_lineplots('N') + fcn_generate_mc_lineplots('β') +
plot_layout(nrow = 1, guides = 'collect')
ggsave('plots/mc_sim_plot_ev.png', plt, scale = 2, width = 2000, height = 1000, units = 'px')
## Plot change in CE
nsims = 60
max_alpha = 100
for (i in 1:28) {
ce_df <- read_csv(paste0("output/ce_df_param_search_", i, "_", nsims, ".csv"), show_col_types = F) %>%
filter(alpha <= max_alpha)
plot11 <- ce_df |>
dplyr::select(-cvar_mstd, -cvar, -mstd, -ev) |>
dplyr::rename(cvar = cvar_ev, mstd = mstd_ev) |>
pivot_longer(c('cvar', 'mstd'), names_to = 'name', values_to = 'value') |>
mutate(name = factor(name, c('mstd', 'cvar', 'ev'), c("M-SD", "M-CVaR", "EV"))) |>
pivot_wider(names_from = var, values_from = value) |>
ggplot() +
geom_hline(yintercept = 0, color = 'gray50') +
#geom_ribbon(aes(ymin = min, ymax = max, x = alpha, fill = name), alpha = 0.15) +
geom_ribbon(aes(ymin = lb, ymax = ub, x = alpha, fill = name), alpha = 0.2) +
geom_line(aes(x = alpha, y = median, color = name)) +
scale_y_continuous("CE: percent difference from EV solution", labels = scales::percent) +
scale_x_continuous("θ") +
ggsci::scale_color_nejm() +
ggsci::scale_fill_nejm() +
ggpubr::theme_pubr() +
#coord_cartesian(expand = F) +
theme(legend.title = element_blank())
plot12 <- ce_df |>
dplyr::select(c(-ev, -cvar, -mstd, -cvar_ev, -mstd_ev)) |>
rename(value = cvar_mstd) |>
pivot_wider(names_from = var, values_from = value) |>
ggplot() +
geom_hline(yintercept = 0) +
#geom_ribbon(aes(ymin = min, ymax = max, x = alpha), alpha = 0.15) +
geom_ribbon(aes(ymin = lb, ymax = ub, x = alpha), alpha = 0.2) +
geom_line(aes(x = alpha, y = median)) +
geom_hline(yintercept = 0, color = 'gray50') +
scale_y_continuous("Change from M-SD", labels = scales::percent) +
scale_x_continuous("θ") +
#coord_cartesian(expand = F) +
ggpubr::theme_pubr()
(delta_plot <- plot11 + plot12 + plot_layout(guides = "collect") & theme(legend.position = 'bottom') &  plot_annotation(tag_levels = 'a') )
ggsave(paste0("plots/delta_plot_", i, ".png"), delta_plot, units = 'cm', width = 20, height = 12)
## Plot change in contiguity
contiguity <- read_csv(paste0('output/distance_param_search_',i,'_', nsims, '.csv'), show_col_types = F) |>
filter(alpha <= max_alpha)
contiguity |>
pivot_longer(c('mstd','cvar')) |>
mutate(name = factor(name, c('mstd', 'cvar', 'ev'), c("M-SD", "M-CVaR", "EV"))) |>
pivot_wider(names_from = var, values_from = value) |>
ggplot() +
#geom_hline(yintercept = 0, color = 'gray50') +
#geom_ribbon(aes(ymin = min, ymax = max, x = alpha, fill = name), alpha = 0.15) +
geom_hline(yintercept = 0, color = 'gray50') +
geom_ribbon(aes(ymin = lb, ymax = ub, x = alpha, fill = name), alpha = 0.2) +
geom_line(aes(x = alpha, y = median, color = name)) +
scale_x_continuous("θ") +
scale_y_continuous("Distance index (change from baseline)", labels = scales::percent) +
ggsci::scale_color_nejm() +
ggsci::scale_fill_nejm() +
ggpubr::theme_pubr() +
coord_cartesian(expand = F) +
theme(legend.title = element_blank())
ggsave(paste0("plots/distance_plot_", i, ".png"), units = 'cm', width = 15, height = 12)
## Plot downsides
downside <- read_csv(paste0('output/downside_param_search_', i, '_',nsims,'.csv'), show_col_types = F)
upside <- read_csv(paste0('output/downside_param_search_', i, '_',nsims,'.csv'), show_col_types = F)
risk_side <- bind_rows(list(downside=downside, upside=upside), .id = "side")
risk_side |>
mutate(side = factor(side, c('downside', 'upside'), c('Downside risk', 'Upside gain'))) |>
pivot_longer(c('mstd','cvar')) |>
mutate(name = factor(name, c('mstd', 'cvar', 'ev'), c("M-SD", "M-CVaR", "EV"))) |>
pivot_wider(names_from = var, values_from = value) |>
ggplot() +
#geom_hline(yintercept = 0, color = 'gray50') +
#geom_ribbon(aes(ymin = min, ymax = max, x = alpha, fill = name), alpha = 0.15) +
geom_hline(yintercept = 0.05, color = 'gray50') +
geom_ribbon(aes(ymin = lb, ymax = ub, x = alpha, fill = name), alpha = 0.2) +
geom_line(aes(x = alpha, y = median, color = name)) +
scale_x_continuous("θ") +
scale_y_continuous("Probability", labels = scales::percent) +
ggsci::scale_color_nejm() +
ggsci::scale_fill_nejm() +
ggpubr::theme_pubr() +
facet_wrap(~side) +
coord_cartesian(expand = F) +
theme(legend.title = element_blank())
ggsave(paste0("plots/downside_risk_", i, ".png"), units = 'cm', width = 20, height = 12)
}
library(tidyverse)
library(patchwork)
nsims = 60
options(scipen = 999)
param_table <- read_csv(sprintf("output/param_df_%s.csv", nsims)) %>%
mutate(η = as.character(η))
param_table <- param_table[1:(nrow(param_table)),] %>%
mutate(N = ifelse(dims=='(10, 10)', 100, ifelse(dims=='(30, 30)', 900, 400)))
param_table$run <- 1:nrow(param_table)
runs = 1:nrow(param_table)
alpha_vec <- c(0, 15, 30)
alpha_lab <- c(`0` = 'θ=0', `15` = 'θ=15', `30` = 'θ=30')
ce_df <- lapply(runs, \(i) read_csv(paste0("output/ce_df_param_search_", i, "_", nsims, ".csv"), show_col_types = F)) %>%
lapply(\(x) filter(x, alpha %in% alpha_vec)) %>%
lapply(\(x) dplyr::select(x, 'cvar_ev', 'mstd_ev', 'var', 'alpha')) %>%
lapply(\(x) pivot_longer(x, cols = c(cvar_ev, mstd_ev))) %>%
lapply(\(x) pivot_wider(x, names_from = 'var', values_from = 'value'))
names(ce_df) <- runs
ce_df_comb <- ce_df %>%
bind_rows(.id = 'run') %>%
mutate(run = as.integer(run)) %>%
left_join(param_table, by = 'run') %>%
mutate(N = ifelse(dims=='(10, 10)', '100', ifelse(dims=='(30, 30)', '900', '400')))
fcn_generate_mc_lineplots <- function(variable, axis_title = NULL, hide_y = TRUE) {
selected_runs <- param_table %>%
filter(run == 1 | !!as.symbol(variable) != param_table[1,variable][[1]])
if (is.null(axis_title)) axis_title <- variable
p <- ce_df_comb %>%
mutate(name = factor(name, c('mstd_ev', 'cvar_ev'), c('M-SD', 'M-CVaR'))) %>%
filter(run %in% selected_runs$run) %>%
mutate(sig_diff = ifelse(lb > 0, 'cvar', ifelse(ub < 0, 'mstd', 'tie'))) %>%
mutate(sig_diff = factor(sig_diff, levels = c('tie', 'cvar', 'mstd'))) %>%
ggplot(aes(x = as.factor(!!as.symbol(variable)), color = name)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = lb, ymax = ub), width = 0, linewidth = 0.5, position = position_dodge(width=.5)) +
geom_point(aes(y = median), position = position_dodge(width=.5)) +
scale_y_continuous("CE change from EV", labels = scales::percent) +
ggsci::scale_color_nejm() +
#scale_color_manual(values = c('#333333',"#0072B5FF",'#BC3C29FF')) +
facet_wrap(vars(alpha), strip.position="top", ncol = 1, labeller = labeller(alpha = alpha_lab)) +
theme_bw() +
labs(x = axis_title) +
guides(color = element_blank())+
theme(panel.grid = element_blank())
#if (variable == 'η') p <- p + scale_x_continuous(trans=scales::pseudo_log_trans(base = 10))
if (hide_y) p <- p + theme(axis.title.y = element_blank(), axis.ticks.y = element_blank(), axis.text.y = element_blank())
if (variable=='η') p <- p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
return(p)
}
plt <- fcn_generate_mc_lineplots('ρ', hide_y = F) + fcn_generate_mc_lineplots('σ') +fcn_generate_mc_lineplots('η', 'π') +fcn_generate_mc_lineplots('yy', 'υ') +fcn_generate_mc_lineplots('budget', 'B') + fcn_generate_mc_lineplots('N') + fcn_generate_mc_lineplots('β') +
plot_layout(nrow = 1, guides = 'collect')
ggsave('plots/mc_sim_plot_ev.png', plt, scale = 2, width = 2000, height = 1000, units = 'px')
fcn_generate_mc_lineplots <- function(variable, axis_title = NULL, hide_y = TRUE) {
selected_runs <- param_table %>%
filter(run == 1 | !!as.symbol(variable) != param_table[1,variable][[1]])
if (is.null(axis_title)) axis_title <- variable
p <- ce_df_comb %>%
mutate(name = factor(name, c('mstd_ev', 'cvar_ev'), c('M-SD', 'M-CVaR'))) %>%
filter(run %in% selected_runs$run) %>%
mutate(sig_diff = ifelse(lb > 0, 'cvar', ifelse(ub < 0, 'mstd', 'tie'))) %>%
mutate(sig_diff = factor(sig_diff, levels = c('tie', 'cvar', 'mstd'))) %>%
ggplot(aes(x = as.factor(!!as.symbol(variable)), color = name)) +
geom_hline(yintercept = 0) +
geom_errorbar(aes(ymin = lb, ymax = ub), width = 0, linewidth = 0.5, position = position_dodge(width=.5)) +
geom_point(aes(y = median), position = position_dodge(width=.5)) +
scale_y_continuous("CE change from EV", labels = scales::percent) +
ggsci::scale_color_nejm() +
#scale_color_manual(values = c('#333333',"#0072B5FF",'#BC3C29FF')) +
facet_wrap(vars(alpha), strip.position="top", ncol = 1, labeller = labeller(alpha = alpha_lab)) +
theme_bw() +
labs(x = axis_title) +
theme(panel.grid = element_blank(),legend.title = element_blank())
#if (variable == 'η') p <- p + scale_x_continuous(trans=scales::pseudo_log_trans(base = 10))
if (hide_y) p <- p + theme(axis.title.y = element_blank(), axis.ticks.y = element_blank(), axis.text.y = element_blank())
if (variable=='η') p <- p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
return(p)
}
plt <- fcn_generate_mc_lineplots('ρ', hide_y = F) + fcn_generate_mc_lineplots('σ') +fcn_generate_mc_lineplots('η', 'π') +fcn_generate_mc_lineplots('yy', 'υ') +fcn_generate_mc_lineplots('budget', 'B') + fcn_generate_mc_lineplots('N') + fcn_generate_mc_lineplots('β') +
plot_layout(nrow = 1, guides = 'collect')
ggsave('plots/mc_sim_plot_ev.png', plt, scale = 2, width = 2000, height = 1000, units = 'px')
i=1
ce_df <- read_csv(paste0("output/ce_df_param_search_", i, "_", nsims, ".csv"), show_col_types = F) %>%
filter(alpha <= max_alpha)
ce_df |>
dplyr::select(-cvar_mstd, -cvar, -mstd, -ev) |>
dplyr::rename(cvar = cvar_ev, mstd = mstd_ev) |>
pivot_longer(c('cvar', 'mstd'), names_to = 'name', values_to = 'value') |>
mutate(name = factor(name, c('mstd', 'cvar', 'ev'), c("M-SD", "M-CVaR", "EV"))) |>
pivot_wider(names_from = var, values_from = value) |> View()
ce_df |>
dplyr::select(c(-ev, -cvar, -mstd, -cvar_ev, -mstd_ev)) |>
rename(value = cvar_mstd) |>
pivot_wider(names_from = var, values_from = value) |>View()
for (i in 1:28) {
ce_df <- read_csv(paste0("output/ce_df_param_search_", i, "_", nsims, ".csv"), show_col_types = F) %>%
filter(alpha <= max_alpha)
plot11 <- ce_df |>
dplyr::select(-cvar_mstd, -cvar, -mstd, -ev) |>
dplyr::rename(cvar = cvar_ev, mstd = mstd_ev) |>
pivot_longer(c('cvar', 'mstd'), names_to = 'name', values_to = 'value') |>
mutate(name = factor(name, c('mstd', 'cvar', 'ev'), c("M-SD", "M-CVaR", "EV"))) |>
pivot_wider(names_from = var, values_from = value) |>
ggplot() +
geom_hline(yintercept = 0, color = 'gray50') +
#geom_ribbon(aes(ymin = min, ymax = max, x = alpha, fill = name), alpha = 0.15) +
geom_ribbon(aes(ymin = lb, ymax = ub, x = alpha, fill = name), alpha = 0.2) +
geom_line(aes(x = alpha, y = median, color = name)) +
scale_y_continuous("CE: change from EV solution", labels = scales::percent) +
scale_x_continuous("θ") +
ggsci::scale_color_nejm() +
ggsci::scale_fill_nejm() +
ggpubr::theme_pubr() +
#coord_cartesian(expand = F) +
theme(legend.title = element_blank())
plot12 <- ce_df |>
dplyr::select(c(-ev, -cvar, -mstd, -cvar_ev, -mstd_ev)) |>
rename(value = cvar_mstd) |>
pivot_wider(names_from = var, values_from = value) |>
ggplot() +
geom_hline(yintercept = 0) +
#geom_ribbon(aes(ymin = min, ymax = max, x = alpha), alpha = 0.15) +
geom_ribbon(aes(ymin = lb, ymax = ub, x = alpha), alpha = 0.2) +
geom_line(aes(x = alpha, y = median)) +
geom_hline(yintercept = 0, color = 'gray50') +
scale_y_continuous("CE: change from M-SD", labels = scales::percent) +
scale_x_continuous("θ") +
#coord_cartesian(expand = F) +
ggpubr::theme_pubr()
(delta_plot <- plot11 + plot12 + plot_layout(guides = "collect") & theme(legend.position = 'bottom') &  plot_annotation(tag_levels = 'a') )
ggsave(paste0("plots/delta_plot_", i, ".png"), delta_plot, units = 'cm', width = 20, height = 12)
## Plot change in contiguity
contiguity <- read_csv(paste0('output/distance_param_search_',i,'_', nsims, '.csv'), show_col_types = F) |>
filter(alpha <= max_alpha)
contiguity |>
pivot_longer(c('mstd','cvar')) |>
mutate(name = factor(name, c('mstd', 'cvar', 'ev'), c("M-SD", "M-CVaR", "EV"))) |>
pivot_wider(names_from = var, values_from = value) |>
ggplot() +
#geom_hline(yintercept = 0, color = 'gray50') +
#geom_ribbon(aes(ymin = min, ymax = max, x = alpha, fill = name), alpha = 0.15) +
geom_hline(yintercept = 0, color = 'gray50') +
geom_ribbon(aes(ymin = lb, ymax = ub, x = alpha, fill = name), alpha = 0.2) +
geom_line(aes(x = alpha, y = median, color = name)) +
scale_x_continuous("θ") +
scale_y_continuous("Distance index (change from baseline)", labels = scales::percent) +
ggsci::scale_color_nejm() +
ggsci::scale_fill_nejm() +
ggpubr::theme_pubr() +
coord_cartesian(expand = F) +
theme(legend.title = element_blank())
ggsave(paste0("plots/distance_plot_", i, ".png"), units = 'cm', width = 15, height = 12)
## Plot downsides
downside <- read_csv(paste0('output/downside_param_search_', i, '_',nsims,'.csv'), show_col_types = F)
upside <- read_csv(paste0('output/downside_param_search_', i, '_',nsims,'.csv'), show_col_types = F)
risk_side <- bind_rows(list(downside=downside, upside=upside), .id = "side")
risk_side |>
mutate(side = factor(side, c('downside', 'upside'), c('Downside risk', 'Upside gain'))) |>
pivot_longer(c('mstd','cvar')) |>
mutate(name = factor(name, c('mstd', 'cvar', 'ev'), c("M-SD", "M-CVaR", "EV"))) |>
pivot_wider(names_from = var, values_from = value) |>
ggplot() +
#geom_hline(yintercept = 0, color = 'gray50') +
#geom_ribbon(aes(ymin = min, ymax = max, x = alpha, fill = name), alpha = 0.15) +
geom_hline(yintercept = 0.05, color = 'gray50') +
geom_ribbon(aes(ymin = lb, ymax = ub, x = alpha, fill = name), alpha = 0.2) +
geom_line(aes(x = alpha, y = median, color = name)) +
scale_x_continuous("θ") +
scale_y_continuous("Probability", labels = scales::percent) +
ggsci::scale_color_nejm() +
ggsci::scale_fill_nejm() +
ggpubr::theme_pubr() +
facet_wrap(~side) +
coord_cartesian(expand = F) +
theme(legend.title = element_blank())
ggsave(paste0("plots/downside_risk_", i, ".png"), units = 'cm', width = 20, height = 12)
}
